import java.util.Arrays;

public class ShellSort {
    public static void main(String[] args) {
        int[] arr = new int[]{ 3, 5, 2, 7, 8, 1, 2, 0, 4, 7, 4, 3, 8};
        System.out.println(Arrays.toString(arr));
        shellSort(arr);
        System.out.println(Arrays.toString(arr));
    }

    /**
     * 希尔排序
     * @param arr 待排序数组
     * 步长是变化的
     * 通过步长的变化可以有效地降低排序的次数
     */
    public static void shellSort(int[] arr){
//      遍历所有的步长
        for(int d=arr.length/2;d>0;d/=2){
//          遍历所有的元素
            for (int i=d;i<arr.length;i++){
//          遍历本组中的所有元素，向后遍历，直至本组的最后一个元素
                for(int j=i-d;j>=0;j-=d){
//                    若当前元素大于加上步长后的那个元素，那就进行交换
                    if(arr[j]>arr[j+d]){
                        int temp = arr[j];
                        arr[j]=arr[j+d];
                        arr[j+d]=temp;
                    }
                }
            }
        }
    }
}
