
import day1.MyQueue;

import java.util.Arrays;

public class RadixQueueSort {
    public static void main(String[] args) {
        int[] arr = new int[]{23,6,189,45,9,287,56,1,798,34,65,652,5};
        radixQueueSort(arr);
        System.out.println(Arrays.toString(arr));
    }
    public static void radixQueueSort(int[] arr){
        int max = Integer.MIN_VALUE;
        for (int i = 0 ;i<arr.length;i++){
            if (arr[i]>max){
                max=arr[i];
            }
        }
//      将最大值转换为字符串，再得出字符串的长度即可；
        int maxLength = (max+"").length();
//      用于临时存储数据队列的数组；
        MyQueue[] temp = new MyQueue[10];
//      为队列数组赋值
        for(int i=0;i<temp.length;i++){
            temp[i]=new MyQueue();
        }
//      根据最大长度的数决定比较的次数
        for (int i=0,n=1;i<maxLength;i++,n*=10){
//          把每一个数分别计算余数
            for (int j=0;j<arr.length;j++){
//              计算余数
                int ys = arr[j]/n%10;
//              把当前遍历的数据放入到指定的队列中
                temp[ys].add(arr[j]);
            }
//          记录取的元素需要放置的位置
            int index = 0;
//          把所有队列中的数字取出来
            for (int k=0;k<temp.length;k++){
//              当该队列不为空时，取出元素并记录下一个位置；
                while(!temp[k].isEmpty()){
                    arr[index++]=temp[k].poll();
                }
            }
        }
    }
}
